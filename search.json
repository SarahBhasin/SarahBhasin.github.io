[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html",
    "href": "posts/beer-markets/beer-markets.html",
    "title": "Beer Markets",
    "section": "",
    "text": "Let‚Äôs analyze the beer_data data:\nbeer_data &lt;- read_csv(\"https://bcdanl.github.io/data/beer_markets.csv\")"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#variable-description-for-beer_data-data.frame",
    "href": "posts/beer-markets/beer-markets.html#variable-description-for-beer_data-data.frame",
    "title": "Beer Markets",
    "section": "Variable Description for beer_data data.frame",
    "text": "Variable Description for beer_data data.frame\nThe following describes the variables in the beer_data data.frame.\n\nhh: Household identifier\n_purchase_desc: Description of the purchase\nquantity: The quantity of beer purchased\nbrand: The brand of beer\ndollar_spent: The amount spent\nbeer_floz: Fluid ounces of beer\nprice_per_floz: Price per fluid ounce\ncontainer: Type of container\npromo: Whether the purchase was on promotion\nmarket: The market where the purchase was made\nDemographics: age, employment status, degree, class of worker (cow), race, and household information like microwave, dishwasher, tvcable, singlefamilyhome, and npeople (number of people in the household)"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#purchase-patterns",
    "href": "posts/beer-markets/beer-markets.html#purchase-patterns",
    "title": "Beer Markets",
    "section": "Purchase Patterns",
    "text": "Purchase Patterns\nWe‚Äôll explore the purchase patterns in the dataset. This includes understanding the most popular brands, the average quantity purchased, and spending habits across different markets. Here are some specific analyses we can perform:\n\nCalculate the total quantity and spending for each brand.\nFind the average quantity purchased and average spending per purchase.\nCompare the total spending across different markets.\n\nI‚Äôll begin with these analyses and create visualizations to help us understand the data better. Let‚Äôs start by calculating the total quantity and spending for each brand.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Reading the CSV file\nbeer_data = pd.read_csv(\"https://bcdanl.github.io/data/beer_markets.csv\")\n\n# Setting up the visualisation settings\nsns.set(style=\"whitegrid\")\n\n# Calculate total quantity and spending for each brand\nbrand_summary = beer_data.groupby('brand').agg({'quantity':'sum', 'dollar_spent':'sum'}).reset_index()\n\n# Sort by total quantity and spending\nbrand_summary_sorted_quantity = brand_summary.sort_values('quantity', ascending=False)\nbrand_summary_sorted_spent = brand_summary.sort_values('dollar_spent', ascending=False)\n\n\n# Plotting total quantity for each brand\nplt.figure(figsize=(10, 8))\nsns.barplot(x='quantity', y='brand', data=brand_summary_sorted_quantity, palette='viridis')\nplt.title('Total Quantity of Beer Purchased by Brand')\nplt.xlabel('Total Quantity')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n# Plotting total spending for each brand\nplt.figure(figsize=(10, 8))\nsns.barplot(x='dollar_spent', y='brand', data=brand_summary_sorted_spent, palette='viridis')\nplt.title('Total Spending on Beer by Brand')\nplt.xlabel('Total Spending')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n\nThe bar charts above display the total quantity of beer purchased and the total spending by brand. From the looks of it, certain brands dominate in terms of quantity sold and total spending, indicating their popularity.\nNow, let‚Äôs calculate the average quantity purchased and average spending per purchase. For this, we‚Äôll consider each row in the dataset as a separate purchase and compute the averages accordingly.\n\n# Calculate average quantity purchased and average spending per purchase\naverage_purchase = beer_data.groupby('brand').agg({\n    'quantity': 'mean', \n    'dollar_spent': 'mean'\n}).reset_index()\n\n# Sort by average quantity and average spending\naverage_purchase_sorted_quantity = average_purchase.sort_values('quantity', ascending=False)\naverage_purchase_sorted_spent = average_purchase.sort_values('dollar_spent', ascending=False)\n\n# Plotting average quantity for each brand\nplt.figure(figsize=(10, 8))\nsns.barplot(x='quantity', y='brand', data=average_purchase_sorted_quantity, palette='viridis')\nplt.title('Average Quantity of Beer Purchased by Brand')\nplt.xlabel('Average Quantity')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n# Plotting average spending for each brand\nplt.figure(figsize=(10, 8))\nsns.barplot(x='dollar_spent', y='brand', data=average_purchase_sorted_spent, palette='viridis')\nplt.title('Average Spending on Beer by Brand')\nplt.xlabel('Average Spending')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n\nThe visualizations above depict the average quantity of beer purchased per brand and the average spending per brand. This shows which brands tend to be bought in larger quantities on average and which brands tend to have higher spending per purchase, which could be indicative of their price point or the purchase of premium products.\nNext, we‚Äôll look at the total spending across different markets to see if there are any notable differences in spending habits geographically. To do this, we‚Äôll sum up the spending in each market and visualize it.\n\n# Calculate total spending in each market\nmarket_spending_summary = beer_data.groupby('market').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nmarket_spending_summary_sorted = market_spending_summary.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending in each market\nplt.figure(figsize=(12, 10))\nsns.barplot(x='dollar_spent', y='market', data=market_spending_summary_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Market')\nplt.xlabel('Total Spending')\nplt.ylabel('Market')\nplt.show()\n\n\n\n\nThe bar chart illustrates the total spending on beer by market, showcasing the differences in spending habits across various regions. Some markets have significantly higher spending, which could be due to a variety of factors including market size, consumer preferences, or economic factors.\nNow, let‚Äôs move on to the second analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#demographic-analysis",
    "href": "posts/beer-markets/beer-markets.html#demographic-analysis",
    "title": "Beer Markets",
    "section": "Demographic Analysis",
    "text": "Demographic Analysis\nWe will examine which demographics are buying what kind of beer and whether spending habits vary by demographics such as age, employment, and race. For this, we could look at:\n\nSpending by age group\nSpending by employment status\nSpending by race\n\nI‚Äôll start by analyzing spending by age group.\n\n# Calculate total spending by age group\nage_group_spending = beer_data.groupby('age').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nage_group_spending_sorted = age_group_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by age group\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='age', data=age_group_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Age Group')\nplt.xlabel('Total Spending')\nplt.ylabel('Age Group')\nplt.show()\n\n\n\n\nThe bar chart demonstrates the total spending on beer segmented by age group, highlighting which age groups spend the most on beer. It appears that certain age groups are more dominant in beer spending, which may align with the purchasing power or preferences of those groups.\nNext, we will examine spending by employment status.\n\n# Calculate total spending by employment status\nemployment_spending = beer_data.groupby('employment').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nemployment_spending_sorted = employment_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by employment status\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='employment', data=employment_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Employment Status')\nplt.xlabel('Total Spending')\nplt.ylabel('Employment Status')\nplt.show()\n\n\n\n\nThe visualization shows the total spending on beer by employment status. We can see that certain employment groups, such as full-time workers, are spending more on beer, which might be related to their disposable income.\nFinally, let‚Äôs look at spending by race to complete the demographic analysis.\n\n# Calculate total spending by race\nrace_spending = beer_data.groupby('race').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nrace_spending_sorted = race_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by race\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='race', data=race_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Race')\nplt.xlabel('Total Spending')\nplt.ylabel('Race')\nplt.show()\n\n\n\n\nThe bar chart above indicates the total spending on beer broken down by race, highlighting which racial groups account for the most beer spending within the dataset. This could reflect both the demographics of the regions where the data was collected and cultural preferences regarding beer.\nNow, let‚Äôs proceed to the third analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#price-sensitivity",
    "href": "posts/beer-markets/beer-markets.html#price-sensitivity",
    "title": "Beer Markets",
    "section": "Price Sensitivity",
    "text": "Price Sensitivity\nWe‚Äôll look at the price per fluid ounce and see if there are any trends or correlations with the quantity purchased or the brand popularity. To do this, we‚Äôll calculate the average price per fluid ounce for each brand and then visualize how this relates to the average quantity purchased and the total quantity purchased by brand.\nFirst, let‚Äôs calculate the average price per fluid ounce for each brand.\n\n# Calculate average price per fluid ounce for each brand\nbrand_price_sensitivity = beer_data.groupby('brand').agg({\n    'price_per_floz': 'mean', \n    'quantity': 'sum'\n}).reset_index()\n\n# Sort by price per fluid ounce\nbrand_price_sensitivity_sorted = brand_price_sensitivity.sort_values('price_per_floz', ascending=True)\n\n# Plotting average price per fluid ounce for each brand and the total quantity purchased\nfig, ax1 = plt.subplots(figsize=(12, 10))\n\ncolor = 'tab:red'\nax1.set_xlabel('Brand')\nax1.set_ylabel('Average Price per Fluid Ounce', color=color)\nax1.bar(brand_price_sensitivity_sorted['brand'], brand_price_sensitivity_sorted['price_per_floz'], color=color)\nax1.tick_params(axis='y', labelcolor=color)\nax1.set_xticklabels(brand_price_sensitivity_sorted['brand'], rotation=90)\n\nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\ncolor = 'tab:blue'\nax2.set_ylabel('Total Quantity Purchased', color=color)  # we already handled the x-label with ax1\nax2.plot(brand_price_sensitivity_sorted['brand'], brand_price_sensitivity_sorted['quantity'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\nfig.tight_layout()  # otherwise the right y-label is slightly clipped\nplt.title('Average Price per Fluid Ounce & Total Quantity Purchased by Brand')\nplt.show()\n\n\n\n\nIn the visualization, we have a bar graph showing the average price per fluid ounce for each brand (in red) and a line graph showing the total quantity purchased for each brand (in blue). This gives us a sense of whether there‚Äôs a relationship between the price and the quantity purchased. The x-axis labels are quite compressed due to the number of brands, but we can still observe trends such as whether lower-priced beers tend to be purchased in larger quantities.\nLastly, let‚Äôs move to the fourth analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#promotional-impact",
    "href": "posts/beer-markets/beer-markets.html#promotional-impact",
    "title": "Beer Markets",
    "section": "Promotional Impact",
    "text": "Promotional Impact\nWe‚Äôll assess the impact of promotions on the quantity of beer purchased. For this analysis, we can calculate the average quantity purchased with and without promotions and visualize the difference. We‚Äôll do this for each brand to see which brands are most affected by promotions.\nLet‚Äôs begin this analysis by looking at the average quantity purchased with and without promotions for each brand.\n\n# Calculate average quantity purchased with and without promotions for each brand\npromo_impact = beer_data.groupby(['brand', 'promo']).agg({'quantity':'mean'}).reset_index()\n\n# Pivot the data to have promo and non-promo side by side for each brand\npromo_impact_pivot = promo_impact.pivot(index='brand', columns='promo', values='quantity').reset_index()\npromo_impact_pivot.columns = ['brand', 'non_promo', 'promo']\n\n# Calculate the difference in average quantity purchased between promo and non-promo\npromo_impact_pivot['promo_impact'] = promo_impact_pivot['promo'] - promo_impact_pivot['non_promo']\n\n# Sort by the impact of promo\npromo_impact_pivot_sorted = promo_impact_pivot.sort_values('promo_impact', ascending=False)\n\n# Plotting the difference in average quantity purchased between promo and non-promo for each brand\nplt.figure(figsize=(12, 10))\nsns.barplot(x='promo_impact', y='brand', data=promo_impact_pivot_sorted, palette='viridis')\nplt.title('Impact of Promotions on Average Quantity Purchased by Brand')\nplt.xlabel('Difference in Average Quantity Purchased (Promo - Non-Promo)')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n\nThe bar chart illustrates the impact of promotions on the average quantity of beer purchased by brand. A positive value indicates that, on average, more beer is purchased when there is a promotion compared to when there isn‚Äôt. Some brands appear to be significantly more influenced by promotions, with customers buying more when the products are on sale or promotion.\nThis comprehensive analysis has provided insights into purchase patterns, demographic preferences, price sensitivity, and the impact of promotions on beer purchases."
  },
  {
    "objectID": "danl-200-quarto.html",
    "href": "danl-200-quarto.html",
    "title": "R Basics",
    "section": "",
    "text": "Plain text\nDANL and DANL\nDANL and DANL\n\n\nCheck out Classwork 3 - Markdown Basics"
  },
  {
    "objectID": "danl-200-quarto.html#dive-into-markdown-syntax",
    "href": "danl-200-quarto.html#dive-into-markdown-syntax",
    "title": "R Basics",
    "section": "",
    "text": "Check out Classwork 3 - Markdown Basics"
  },
  {
    "objectID": "danl-200-quarto.html#r-as-a-calculator",
    "href": "danl-200-quarto.html#r-as-a-calculator",
    "title": "R Basics",
    "section": "2.1 1. R as a Calculator",
    "text": "2.1 1. R as a Calculator\nR can be used as a simple calculator. You can perform arithmetic operations like addition (+), subtraction (-), multiplication (*), and division (/). For example, typing 2 + 2 in the R console will give you 4."
  },
  {
    "objectID": "danl-200-quarto.html#variables",
    "href": "danl-200-quarto.html#variables",
    "title": "R Basics",
    "section": "2.2 Variables",
    "text": "2.2 Variables\nVariables in R are used to store data. You can create a variable using the assignment operator &lt;- (option/Alt + -). For example:\n\n\nCode\nmy_variable &lt;- 10\n\n\nThis will store the value 10 in my_variable."
  },
  {
    "objectID": "danl-200-quarto.html#data-types",
    "href": "danl-200-quarto.html#data-types",
    "title": "R Basics",
    "section": "2.3 Data Types",
    "text": "2.3 Data Types\n\nR has several basic data types:\n\nNumeric: For decimal values like 2.5.\nInteger: For whole numbers like 2L (the L tells R it is an integer).\nCharacter: For text or string values, e.g., \"Hello\".\nLogical: For boolean values (TRUE or FALSE)."
  },
  {
    "objectID": "danl-200-quarto.html#vectors",
    "href": "danl-200-quarto.html#vectors",
    "title": "R Basics",
    "section": "2.4 Vectors",
    "text": "2.4 Vectors\nVectors are a basic data structure in R. They contain elements of the same type. You can create a vector using the c() function:\n\n\nCode\nmy_vector &lt;- c(1, 2, 3, 4, 5)"
  },
  {
    "objectID": "danl-200-quarto.html#data-frames",
    "href": "danl-200-quarto.html#data-frames",
    "title": "R Basics",
    "section": "2.5 Data Frames",
    "text": "2.5 Data Frames\nData frames are used for storing data tables in R. It is a list of vectors of equal length. For example, to create a simple data frame:\n\n\nCode\ndf &lt;- data.frame(\n  Name = c(\"Alice\", \"Bob\"), \n  Age = c(25, 30)\n  )"
  },
  {
    "objectID": "danl-200-quarto.html#functions",
    "href": "danl-200-quarto.html#functions",
    "title": "R Basics",
    "section": "2.6 Functions",
    "text": "2.6 Functions\nFunctions are used to carry out specific tasks in R. For example, sum() is a function that adds numbers together:\n\n\nCode\nsum(1, 2, 3) # Returns 6\n\n\n[1] 6"
  },
  {
    "objectID": "danl-200-quarto.html#packages",
    "href": "danl-200-quarto.html#packages",
    "title": "R Basics",
    "section": "2.7 Packages",
    "text": "2.7 Packages\nR has a vast collection of packages for various statistical tasks. You can install a package using install.packages(\"packageName\") and load it using library(packageName)."
  },
  {
    "objectID": "danl-200-quarto.html#help-system",
    "href": "danl-200-quarto.html#help-system",
    "title": "R Basics",
    "section": "2.8 Help System",
    "text": "2.8 Help System\nTo get help on a specific function or topic, use the help() function or the shorthand ?, like ?sum on R Console."
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nBeer Markets\n\n\n\n\n\n\n\n\n\nMay 15, 2024\n\n\nSarah Bhasin\n\n\n7 min\n\n\n\n\n\n\n  \n\n\n\n\nSpotify\n\n\n\n\n\n\n\n\n\nMay 10, 2024\n\n\nSarah Bhasin\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nHoliday movies\n\n\n\n\n\n\n\n\n\nApr 29, 2024\n\n\nSarah Bhasin\n\n\n6 min\n\n\n\n\n\n\n  \n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html",
    "href": "danl-200-hw-01-q (3).html",
    "title": "Homework 1 - Part 3",
    "section": "",
    "text": "library(tidyverse)\nlibrary(skimr)"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html#question-0.",
    "href": "danl-200-hw-01-q (3).html#question-0.",
    "title": "Homework 1 - Part 3",
    "section": "Question 0.",
    "text": "Question 0.\nProvide your GitHub username.\nAnswer:"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html#question-1.",
    "href": "danl-200-hw-01-q (3).html#question-1.",
    "title": "Homework 1 - Part 3",
    "section": "Question 1.",
    "text": "Question 1.\nbase-R provides the R object state.name. Write an R code to assign state.name to a variable, US_states.\nAnswer:"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html#question-2.",
    "href": "danl-200-hw-01-q (3).html#question-2.",
    "title": "Homework 1 - Part 3",
    "section": "Question 2.",
    "text": "Question 2.\nThe temp_F vector contains the average high temperatures in January for the following cities: Seoul, Lagos, Paris, Rio de Janeiro, San Juan, and Rochester.\n\ntemp_F &lt;- c(35, 88, 42, 84, 81, 30)\n\nCreate a new vector named temp_C that stores the converted Celsius temperatures. Below is the conversion formula:\n\\[\nC = \\frac{5}{9}\\times(F - 32)\n\\]\nAnswer:"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html#question-3.",
    "href": "danl-200-hw-01-q (3).html#question-3.",
    "title": "Homework 1 - Part 3",
    "section": "Question 3.",
    "text": "Question 3.\n\nWrite an R code to calculate the standard deviation (SD) of the integer vector x below manually. That is to calculate the SD without using the sd() function.\n\n\nx &lt;- 1:25\n\n\nAlso, write an R code to test whether the standard deviation you calculate manually above is equal to sd(x).\n\nAnswer:"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html#question-4.",
    "href": "danl-200-hw-01-q (3).html#question-4.",
    "title": "Homework 1 - Part 3",
    "section": "Question 4.",
    "text": "Question 4.\n\nWrite an R code to read the CSV file, https://bcdanl.github.io/data/mlb_teams.csv using the tidyverse‚Äôs read_csv() function, and assign it to MLB_teams.\n\nAnswer:"
  },
  {
    "objectID": "danl-200-hw-01-q (3).html#question-5.",
    "href": "danl-200-hw-01-q (3).html#question-5.",
    "title": "Homework 1 - Part 3",
    "section": "Question 5.",
    "text": "Question 5.\nWrite an R code to provide summary statistics‚Äîmean, standard deviation, minimum, first quartile, median, third quartile, and maximum‚Äîfor variables in the MLB_teams data.frame.\nAnswer:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sarah Bhasin",
    "section": "",
    "text": "Sarah Bhasin majors in marketing and minors in communication at SUNY Geneseo. When not seeking new experiences in the business world, Sarah enjoys expressing her creativity through writing."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Sarah Bhasin",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Marketing | Aug 2021 - May 2025  Minor in Communication"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Sarah Bhasin",
    "section": "Experience",
    "text": "Experience\nRF SUNY | Marketing Intern | May 2023 - Dec 2023"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code with no space in the folder name.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/health/holiday.html",
    "href": "posts/health/holiday.html",
    "title": "Holiday movies",
    "section": "",
    "text": "pathname &lt;- \"https://bcdanl.github.io/data/holiday_movies_w_genres.csv\"\nholiday_movies &lt;- read_csv(pathname)"
  },
  {
    "objectID": "posts/health/holiday.html#question-1.",
    "href": "posts/health/holiday.html#question-1.",
    "title": "Holiday movies",
    "section": "Question 1.",
    "text": "Question 1.\nProvide both (1) ggplot code and (2) a comment to describe how the relationship between log10(num_votes) and average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_point(mapping = \n               aes(x = log10(num_votes), \n                   y = average_rating, \n                   color = genre), alpha = .2 ) +\n  geom_smooth(mapping = \n               aes(x = log10(num_votes), \n                   y = average_rating))+\n  geom_smooth(mapping=\n                aes(x = log10(num_votes),\n                    y = average_rating),\n              method= lm, \n              color= \"red\") +\n  facet_wrap(genre ~ .)"
  },
  {
    "objectID": "posts/health/holiday.html#question-2.",
    "href": "posts/health/holiday.html#question-2.",
    "title": "Holiday movies",
    "section": "Question 2.",
    "text": "Question 2.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of genre varies by title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_bar(mapping=\n               aes(y = genre,\n                   fill = genre),\n           show.legend = F)+\n           \n             \nfacet_wrap(~title_type)"
  },
  {
    "objectID": "posts/health/holiday.html#question-3.",
    "href": "posts/health/holiday.html#question-3.",
    "title": "Holiday movies",
    "section": "Question 3.",
    "text": "Question 3.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of average_rating, such as quartile values and outliers, varies by genre and title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_boxplot(mapping = \n               aes(x = average_rating, y = genre,\n                   fill = genre, alpha = .2)) +\n                  \n             \nfacet_grid( title_type ~ .)\n\n\n\n\n\n## Question 4. Provide both (1) ggplot code and (2) a comment to describe how the distribution of log(num_votes) varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_histogram(mapping = \n               aes(x = log(num_votes), bins = 39,\n                   fill = genre),\n                   show.legend = F) +\n                  \n             \n  facet_wrap( genre ~ .)"
  },
  {
    "objectID": "posts/health/holiday.html#question-5.",
    "href": "posts/health/holiday.html#question-5.",
    "title": "Holiday movies",
    "section": "Question 5.",
    "text": "Question 5.\nBelow is the data.frame, holiday_movies_genre_yearly, containing yearly mean value of average_rating for each genre.\n\nholiday_movies_genre_yearly &lt;- read_csv(\"https://bcdanl.github.io/data/holiday_movies_w_genres_yearly.csv\")\n\nProvide both (1) ggplot code and (2) a comment to describe how the yearly trend of average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies_genre_yearly) + \n  geom_line(mapping =\n               aes(x = year,\n                   y = average_rating)) +\n  geom_point(mapping=\n               aes(x= year,\n                   y = average_rating))+\n  geom_smooth(mapping=\n                aes(x = year,\n                    y = average_rating))+\n  geom_smooth(mapping=\n                aes(x= year,\n                    y = average_rating),\n              method = lm,\n              color = \"red\") +\n                  \n             \n  facet_wrap( genre ~ .)"
  },
  {
    "objectID": "posts/holiday/holiday.html",
    "href": "posts/holiday/holiday.html",
    "title": "Holiday movies",
    "section": "",
    "text": "pathname &lt;- \"https://bcdanl.github.io/data/holiday_movies_w_genres.csv\"\nholiday_movies &lt;- read_csv(pathname)"
  },
  {
    "objectID": "posts/holiday/holiday.html#question-1.",
    "href": "posts/holiday/holiday.html#question-1.",
    "title": "Holiday movies",
    "section": "Question 1.",
    "text": "Question 1.\nProvide both (1) ggplot code and (2) a comment to describe how the relationship between log10(num_votes) and average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_point(mapping = \n               aes(x = log10(num_votes), \n                   y = average_rating, \n                   color = genre), alpha = .2 ) +\n  geom_smooth(mapping = \n               aes(x = log10(num_votes), \n                   y = average_rating))+\n  geom_smooth(mapping=\n                aes(x = log10(num_votes),\n                    y = average_rating),\n              method= lm, \n              color= \"red\") +\n  facet_wrap(genre ~ .)"
  },
  {
    "objectID": "posts/holiday/holiday.html#question-2.",
    "href": "posts/holiday/holiday.html#question-2.",
    "title": "Holiday movies",
    "section": "Question 2.",
    "text": "Question 2.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of genre varies by title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_bar(mapping=\n               aes(y = genre,\n                   fill = genre),\n           show.legend = F)+\n           \n             \nfacet_wrap(~title_type)"
  },
  {
    "objectID": "posts/holiday/holiday.html#question-3.",
    "href": "posts/holiday/holiday.html#question-3.",
    "title": "Holiday movies",
    "section": "Question 3.",
    "text": "Question 3.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of average_rating, such as quartile values and outliers, varies by genre and title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_boxplot(mapping = \n               aes(x = average_rating, y = genre,\n                   fill = genre, alpha = .2)) +\n                  \n             \nfacet_grid( title_type ~ .)\n\n\n\n\n\n## Question 4. Provide both (1) ggplot code and (2) a comment to describe how the distribution of log(num_votes) varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_histogram(mapping = \n               aes(x = log(num_votes), bins = 39,\n                   fill = genre),\n                   show.legend = F) +\n                  \n             \n  facet_wrap( genre ~ .)"
  },
  {
    "objectID": "posts/holiday/holiday.html#question-5.",
    "href": "posts/holiday/holiday.html#question-5.",
    "title": "Holiday movies",
    "section": "Question 5.",
    "text": "Question 5.\nBelow is the data.frame, holiday_movies_genre_yearly, containing yearly mean value of average_rating for each genre.\n\nholiday_movies_genre_yearly &lt;- read_csv(\"https://bcdanl.github.io/data/holiday_movies_w_genres_yearly.csv\")\n\nProvide both (1) ggplot code and (2) a comment to describe how the yearly trend of average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies_genre_yearly) + \n  geom_line(mapping =\n               aes(x = year,\n                   y = average_rating)) +\n  geom_point(mapping=\n               aes(x= year,\n                   y = average_rating))+\n  geom_smooth(mapping=\n                aes(x = year,\n                    y = average_rating))+\n  geom_smooth(mapping=\n                aes(x= year,\n                    y = average_rating),\n              method = lm,\n              color = \"red\") +\n                  \n             \n  facet_wrap( genre ~ .)"
  },
  {
    "objectID": "posts/Spotify/spotify.html",
    "href": "posts/Spotify/spotify.html",
    "title": "Spotify",
    "section": "",
    "text": "Let‚Äôs analyze the spotify data:"
  },
  {
    "objectID": "posts/Spotify/spotify.html#variable-description",
    "href": "posts/Spotify/spotify.html#variable-description",
    "title": "Spotify",
    "section": "Variable Description",
    "text": "Variable Description\n\npid: playlist ID; unique ID for playlist\nplaylist_name: a name of playlist\npos: a position of the track within a playlist (starting from 0)\nartist_name: name of the track‚Äôs primary artist\ntrack_name: name of the track\nduration_ms: duration of the track in milliseconds\nalbum_name: name of the track‚Äôs album"
  },
  {
    "objectID": "posts/Spotify/spotify.html#q1a",
    "href": "posts/Spotify/spotify.html#q1a",
    "title": "Spotify",
    "section": "Q1a",
    "text": "Q1a\n\nFind the ten most popular song.\n\nA value of a song is defined as a combination of a artist_name value and a track_name value.\nWho are artists for those ten most popular song?\n\n\nAnswer:\n\ndf_popular &lt;- spotify_all |&gt;\n  group_by(artist_name, track_name) |&gt;\n  summarise(popularity = n())|&gt;\n  arrange(desc(popularity))\n\ntop_ten &lt;- df_popular |&gt;\n  slice(1:10)"
  },
  {
    "objectID": "posts/Spotify/spotify.html#q1b",
    "href": "posts/Spotify/spotify.html#q1b",
    "title": "Spotify",
    "section": "Q1b",
    "text": "Q1b\n\nFind the five most popular artist in terms of the number of occurrences in the data.frame, spotify_all.\nWhat is the most popular song for each of the five most popular artist?\n\nAnswer:\n\ntop_5_pop_artist &lt;- spotify_all |&gt; \n  group_by(artist_name) |&gt; \n  summarize(freq= n()) |&gt;\n  arrange(desc(freq)) |&gt;\n  slice_head (n = 5)\n\npop_top_5 &lt;- spotify_all |&gt;\n  count(artist_name, track_name) |&gt;\n  filter(artist_name %in% top_5_pop_artist$artist_name) |&gt;\n  arrange(artist_name, -n) |&gt;\n  group_by(artist_name) |&gt;\n  slice_max (n, n = 1)"
  },
  {
    "objectID": "posts/Spotify/spotify.html#q1c",
    "href": "posts/Spotify/spotify.html#q1c",
    "title": "Spotify",
    "section": "Q1c",
    "text": "Q1c\n\nCreate a data.frame named drake_one_dance that includes all playlists featuring the song where track_name equals ‚ÄúOne Dance‚Äù and artist_name equals ‚ÄúDrake‚Äù.\n\nEnsure that the data.frame drake_one_dance does not contain any playlists where the song ‚ÄúOne Dance‚Äù by Drake is absent.\n\nWhat is the song with the highest frequency of appearances after Drake‚Äôs ‚ÄúOne Dance‚Äù in the newly created data.frame, drake_one_dance?\n\nAnswer:\n\ndrake &lt;- spotify_all |&gt;\n  filter(track_name == \"One Dance\", artist_name == \"Drake\")|&gt;\n  distinct(pid)\n\ndrake_one_dance &lt;- spotify_all |&gt;\n  filter(pid %in% drake$pid)\n\nhigh_freq_drake_one_dance &lt;- drake_one_dance |&gt;\n  group_by(artist_name, track_name) |&gt;\n  summarize(frequency =n()) |&gt;\n  arrange(desc(frequency))"
  },
  {
    "objectID": "posts/Spotify/spotify.html#q1d",
    "href": "posts/Spotify/spotify.html#q1d",
    "title": "Spotify",
    "section": "Q1d",
    "text": "Q1d\nProvide both (1) ggplot code and (2) a couple of sentences to describe how the distribution of pos varies by the ten most popular artists.\nAnswer:\n\ntop_10_pop_artist &lt;- spotify_all |&gt; \n  group_by(artist_name) |&gt; \n  summarize(freq= n()) |&gt;\n  arrange(desc(freq)) |&gt;\n  \n  slice_head (n = 10)\n\ntop10_pos &lt;- spotify_all |&gt; \n  filter(artist_name %in% top_10_pop_artist$artist_name)\n\nggplot(data = top10_pos) +\n  geom_boxplot(mapping =\n                 aes(x = pos,\n                     y = artist_name))\n\n\n\n\nBased on the data visualization, the ten most popular artists are likely to have songs in the beginning of a songs playlist (their order placement being within the first 50 songs). Additionally, the median Rhianna is one of the lowest, meaning her songs are in the beginning of the playlists compared to others."
  },
  {
    "objectID": "posts/Spotify/spotify.html#q1e",
    "href": "posts/Spotify/spotify.html#q1e",
    "title": "Spotify",
    "section": "Q1e",
    "text": "Q1e\n.Create the data.frame with pid-artist level of observations with the following four variables:\n\npid: playlist id\nplaylist_name: name of playlist\nartist: name of the track‚Äôs primary artist, which appears only once within a playlist\nn_artist: number of occurrences of artist within a playlist\n\nAnswer:\n\npid_artist &lt;- spotify_all |&gt;\n  group_by(pid, playlist_name, artist_name) |&gt;\n  count() |&gt;\n  rename(n_artist = n)"
  },
  {
    "objectID": "posts/beer-markets/beer-markets-sarah.html",
    "href": "posts/beer-markets/beer-markets-sarah.html",
    "title": "Beer Markets",
    "section": "",
    "text": "Let‚Äôs analyze the beer_markets data:\nbeer_markets &lt;- read_csv(\"https://bcdanl.github.io/data/beer_markets_all.csv\")"
  },
  {
    "objectID": "posts/beer-markets/beer-markets-sarah.html#variable-description-for-beer_market-data.frame",
    "href": "posts/beer-markets/beer-markets-sarah.html#variable-description-for-beer_market-data.frame",
    "title": "Beer Markets",
    "section": "Variable Description for beer_market data.frame",
    "text": "Variable Description for beer_market data.frame\nThe following describes the variables in the beer_data data.frame. - hh: Household identifier - _purchase_desc: Description of the purchase - quantity: The quantity of beer purchased - brand: The brand of beer - dollar_spent: The amount spent - beer_floz: Fluid ounces of beer - price_per_floz: Price per fluid ounce - container: Type of container - promo: Whether the purchase was on promotion - market: The market where the purchase was made - state: US State demographic data: including gender, marital status, household income, class of work, race, education, age, the size of household, and whether or not the household has a microwave or a dishwasher."
  },
  {
    "objectID": "posts/beer-markets/beer-markets-sarah.html#summary-statistics",
    "href": "posts/beer-markets/beer-markets-sarah.html#summary-statistics",
    "title": "Beer Markets",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\n\n\n  \n\n\n\nskim(beer_markets) |&gt;  \n  select(-n_missing)\n\n\nData summary\n\n\nName\nbeer_markets\n\n\nNumber of rows\n73115\n\n\nNumber of columns\n25\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n14\n\n\nlogical\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\n_purchase_desc\n1\n12\n29\n0\n115\n0\n\n\nbrand\n1\n9\n13\n0\n5\n0\n\n\ncontainer\n1\n3\n30\n0\n7\n0\n\n\nmarket\n1\n5\n20\n0\n92\n0\n\n\nstate\n1\n4\n20\n0\n49\n0\n\n\nbuyertype\n1\n4\n7\n0\n3\n0\n\n\nincome\n1\n5\n8\n0\n5\n0\n\n\nage\n1\n3\n5\n0\n4\n0\n\n\nemployment\n1\n4\n4\n0\n3\n0\n\n\ndegree\n1\n2\n7\n0\n4\n0\n\n\ncow\n1\n4\n25\n0\n4\n0\n\n\nrace\n1\n5\n8\n0\n5\n0\n\n\ntvcable\n1\n4\n7\n0\n3\n0\n\n\nnpeople\n1\n1\n5\n0\n5\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\ncomplete_rate\nmean\ncount\n\n\n\n\npromo\n1\n0.20\nFAL: 58563, TRU: 14552\n\n\nchildrenUnder6\n1\n0.07\nFAL: 68109, TRU: 5006\n\n\nchildren6to17\n1\n0.20\nFAL: 58155, TRU: 14960\n\n\nmicrowave\n1\n0.99\nTRU: 72676, FAL: 439\n\n\ndishwasher\n1\n0.73\nTRU: 53258, FAL: 19857\n\n\nsinglefamilyhome\n1\n0.81\nTRU: 59058, FAL: 14057\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nhh\n1\n17407721.61\n11582147.34\n2000235.00\n8223438.00\n8413624.00\n30171315.00\n30440718.00\n‚ñÇ‚ñá‚ñÅ‚ñÅ‚ñá\n\n\nquantity\n1\n1.32\n1.15\n1.00\n1.00\n1.00\n1.00\n48.00\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\ndollar_spent\n1\n13.78\n8.72\n0.51\n8.97\n12.99\n16.38\n159.13\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nbeer_floz\n1\n265.93\n199.52\n12.00\n144.00\n216.00\n360.00\n9216.00\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nprice_per_floz\n1\n0.06\n0.01\n0.00\n0.05\n0.06\n0.06\n0.23\n‚ñÉ‚ñá‚ñÅ‚ñÅ‚ñÅ\n\n\n\n\n\n##Beer_floz to price_per_floz The following histogram shows how the distribution of ‚Äòprice_per_floz‚Äô varies by ‚Äòbeer_floz‚Äô.\n\nggplot(beer_markets, aes(x = price_per_floz)) +\n  geom_histogram(binwidth = 0.01, fill = \"Black\") +\n  labs(title = \"Distribution of Price per fl. oz\",\n       x = \"Price per fl. oz\",\n       y = \"Frequency\")\n\n\n\n\n\nggplot(beer_markets, aes(x = beer_floz)) +\n  geom_histogram(binwidth = 350, fill = \"Black\") +\n  labs(title = \"Distribution of Beer fl. oz\",\n       x = \"Beer fl. oz\",\n       y = \"Frequency\")\n\n\n\n\n\nFloz_to_price &lt;- beer_markets |&gt; \n  select(beer_floz, price_per_floz) |&gt; \n  mutate(\n    beer_price_per_floz = beer_floz * price_per_floz) |&gt; \n  arrange(-beer_price_per_floz)\n\n#This shows what the price of a beer would be by the cost per fl. oz\n\n#Dollar Spent to Quantity\nThis will show the amount of money that someone is spending to by a beer or a pack of them depending on the quantity that they are buying\n\nggplot(beer_markets, aes(x = dollar_spent)) +\n  geom_histogram(binwidth = 5, fill = \"Black\") +\n  labs(title = \"Distribution of Dollar Spent on Beer\",\n       x = \"Dollar Spent\",\n       y = \"Frequency\")\n\n\n\n\n\nggplot(beer_markets, aes(x = quantity)) +\n  geom_histogram(binwidth = 1, fill = \"Black\") +\n  labs(title = \"Distribution of Quantity Bought\",\n       x = \"Quantity\",\n       y = \"Frequency\")\n\n\n\n\n\nggplot(beer_markets, aes(x = dollar_spent, y = quantity)) +\n  geom_point(color = \"Black\", alpha = 0.1) +\n  labs(title = \"Dollar Spent vs Quantity\",\n       x = \"Dollar Spent\",\n       y = \"Quantity\")\n\n\n\n#In this scatter plot we can see that it is heavily skewed towards the bottom left, meaning more people buy small amount of beer and that it doesn't cost them a lot of money\n\n#Signifcance\nBeing able to identify how much people are spending on alcohol, how much they are buying, and what their living conditions are, could be used to help resource groups for alcohol abuse. With this information, they can persuade those addicted to quit by projecting viusals to help them realize how much they are truly spending. We can also identify what households are buying a lot of alcohol. This is important as alcohol can lead to abuse to other people in the household, so one should keep track with who is buying what and keeping track of higher buyers.\n##References\n\nbeer_markets &lt;- read_csv(\"https://bcdanl.github.io/data/beer_markets_all.csv\")"
  },
  {
    "objectID": "posts/beer-markets/beer-markets-sarah.html#state-and-brand",
    "href": "posts/beer-markets/beer-markets-sarah.html#state-and-brand",
    "title": "Beer Markets",
    "section": "State and brand",
    "text": "State and brand\n\nstate_total &lt;- beer_markets |&gt;\n  group_by(state) |&gt;\n  summarise(total_quantity = sum(quantity))\nhighest_consumption &lt;- state_total |&gt;\n  arrange(desc(total_quantity)) |&gt;\n  slice(1:5)\n\nggplot(highest_consumption, aes(x = state, y = total_quantity)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Total Beer Consumption by State\",\n       x = \"State\",\n       y = \"Total Quantity\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nThe visualizations above depicts the total quantity of beer purchased in the 5 states with the highest quantity of beer purchased.This shows which states tend to be buy more beer, an important thing for a beer company to know when allocating their marketing efforts and resources. According to the bar chart, Florida is the state with the highest quantity of beer purchased.A company may use this knowledge to allocate more inventory to warehouses in Florida/tailor their marketing efforts to those in Florida.\nNext, we want to see the most popular beer brands in the U.S. across all states by their quantity\n\nstate_brand_total &lt;- beer_markets|&gt;\n  group_by(state, brand) |&gt;\n  summarise(total_quantity = sum(quantity)) |&gt;\n  ungroup() |&gt;\n  arrange(desc(total_quantity))\n\n# Calculate total beer consumption by brand across all states (national level)\nnational_brand_total &lt;- state_brand_total |&gt;\n  group_by(brand) |&gt;\n  summarise(total_quantity_national = sum(total_quantity)) |&gt;\n  ungroup() |&gt;\n  arrange(desc(total_quantity_national))\n\nggplot(national_brand_total, aes(x = reorder(brand, total_quantity_national), y = total_quantity_national)) +\n  geom_bar(stat = \"identity\", fill = \"yellow\") +\n  labs(title = \"National Total Quantity by Brand\",\n       x = \"Brand\",\n       y = \"Total Quantity\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nThis chart shows the top 5 brands that yield the most demand across all states. As we can see, Bud Light is the beer brand in this data set with the highest quantity purchased across all the states. In other words, Bud Light is a top competitor in the American beer market.\nAdditionally, the state_brand_total data frame shows us the top beer companies in the top 5 states provided earlier. The results are Florida: Natural Light Texas: Natural Light California: Bud Light Ohio: Miller lite North Carolina: Bud Light\nThis will tell a company interested in entering those specific states (which are the top 5 states that purchased the most beer) who their top competitors will be.\n\npromo_dollar &lt;- beer_markets |&gt;\nfilter(!is.na(promo))\n\npromo_dollar_spent &lt;- promo_dollar |&gt;\ngroup_by(promo) |&gt;\nsummarize(avg_dollar_spent = mean(dollar_spent))\n\ngit add .\ngit commit -m ‚Äúbeer‚Äù\ngit push"
  },
  {
    "objectID": "posts/beer-markets/beer-markets-sarah.html#beer_floz-to-price_per_floz",
    "href": "posts/beer-markets/beer-markets-sarah.html#beer_floz-to-price_per_floz",
    "title": "Beer Markets",
    "section": "Beer_floz to price_per_floz",
    "text": "Beer_floz to price_per_floz\nThe following histogram shows how the distribution of ‚Äòprice_per_floz‚Äô varies by ‚Äòbeer_floz‚Äô.\n\nggplot(beer_markets, aes(x = price_per_floz)) +\n  geom_histogram(binwidth = 0.01, fill = \"Black\") +\n  labs(title = \"Distribution of Price per fl. oz\",\n       x = \"Price per fl. oz\",\n       y = \"Frequency\")\n\n\n\n\n\nggplot(beer_markets, aes(x = beer_floz)) +\n  geom_histogram(binwidth = 350, fill = \"Black\") +\n  labs(title = \"Distribution of Beer fl. oz\",\n       x = \"Beer fl. oz\",\n       y = \"Frequency\")\n\n\n\n\n\nFloz_to_price &lt;- beer_markets |&gt; \n  select(beer_floz, price_per_floz) |&gt; \n  mutate(\n    beer_price_per_floz = beer_floz * price_per_floz) |&gt; \n  arrange(-beer_price_per_floz)\n\n#This shows what the price of a beer would be by the cost per fl. oz"
  }
]